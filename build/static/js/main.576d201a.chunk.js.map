{"version":3,"sources":["components/RecipeDetails.js","components/Recipe.js","components/Alert.js","App.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","key","uuidv4","className","text","weight","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","href","target","rel","onClick","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","getData","a","Axios","get","result","data","more","hits","console","log","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","ReactDOM","render","document","getElementById"],"mappings":"8RAceA,EAXO,SAAC,GACnB,OADqC,EAAjBC,YACDC,KAAI,SAAAC,GACnB,OACI,wBAAIC,IAAKC,cAAUC,UAAU,mBACzB,wBAAIA,UAAU,mBAAmBH,EAAWI,MAC5C,wBAAID,UAAU,qBAAd,YAA4CH,EAAWK,aCYxDC,EAjBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EACDC,oBAAS,GADR,mBAClBC,EADkB,KACZC,EADY,OAGgBH,EAAOA,OAAzCI,EAHkB,EAGlBA,MAAOC,EAHW,EAGXA,MAAOC,EAHI,EAGJA,IAAKf,EAHD,EAGCA,YAC1B,OACI,yBAAKK,UAAU,UACX,4BAAKQ,GACL,yBAAKG,IAAKF,EAAOG,IAAKJ,IACtB,uBAAGK,KAAMH,EAAKI,OAAO,SAASC,IAAI,uBAAlC,OAGA,4BAAQC,QAAS,kBAAMT,GAASD,KAAhC,eACCA,GAAQ,kBAAC,EAAD,CAAeX,YAAaA,MCLlCsB,EARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,yBAAKlB,UAAU,SACX,4BAAKkB,KCsDFC,EApDH,WAAO,IAAD,EACYd,mBAAS,IADrB,mBACPe,EADO,KACAC,EADA,OAEgBhB,mBAAS,IAFzB,mBAEPiB,EAFO,KAEEC,EAFF,OAGYlB,mBAAS,IAHrB,mBAGPa,EAHO,KAGAM,EAHA,KASRd,EAAG,0CAAsCU,EAAtC,mBAJM,WAIN,oBAFO,oCAIVK,EAAO,uCAAG,4BAAAC,EAAA,yDACC,KAAVN,EADS,iCAEaO,IAAMC,IAAIlB,GAFvB,WAEFmB,EAFE,QAGGC,KAAKC,KAHR,yCAIGP,EAAS,2BAJZ,OAMRD,EAAWM,EAAOC,KAAKE,MACvBC,QAAQC,IAAIL,GACZL,EAAS,IACTH,EAAS,IATD,wBAWRG,EAAS,2BAXD,4CAAH,qDAwBb,OACI,yBAAKxB,UAAU,OACX,kDACA,0BAAMA,UAAU,cAAcmC,SARrB,SAACC,GACdA,EAAEC,iBACFZ,MAOe,KAAVP,GAAgB,kBAAC,EAAD,CAAOA,MAAOA,IAC/B,2BAAOoB,KAAK,OAAOC,YAAY,cAAcC,aAAa,MAAMC,SAdvD,SAACL,GACdf,EAASe,EAAEtB,OAAO4B,QAcdA,MAAOtB,IACP,2BAAOkB,KAAK,SAASI,MAAM,YAE3B,yBAAK1C,UAAU,WACVsB,IAAY,IAAMA,EAAQ1B,KAAI,SAAAQ,GAAM,OACrC,kBAAC,EAAD,CAAQN,IAAKC,cAAUK,OAAQA,UCjD/CuC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.576d201a.chunk.js","sourcesContent":["import React from 'react';\nimport {v4 as uuidv4} from 'uuid';\n\nconst RecipeDetails = ({ingredients}) => {\n    return ingredients.map(ingredient => {\n        return(\n            <ul key={uuidv4()} className=\"ingredient-list\">\n                <li className=\"ingredient-text\">{ingredient.text}</li>\n                <li className=\"ingredient-weight\">Weight - {ingredient.weight}</li>\n            </ul>\n        )\n    });\n};\n\nexport default RecipeDetails\n","import React, {useState} from 'react';\nimport RecipeDetails from './RecipeDetails';\n\nconst Recipe = ({recipe}) => {\n    const [show, setShow] = useState(false);\n\n    const {label, image, url, ingredients} = recipe.recipe;\n    return (\n        <div className=\"recipe\">\n            <h2>{label}</h2>\n            <img src={image} alt={label} />\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                URL\n            </a>\n            <button onClick={() => setShow(!show)} >ingredients</button>\n            {show && <RecipeDetails ingredients={ingredients} />}\n        </div>\n    );\n};\n\nexport default Recipe\n","import React from 'react';\n\nconst Alert = ({alert}) => {\n    return (\n        <div className=\"alert\" >\n            <h3>{alert}</h3>\n        </div>\n    )\n}\n\nexport default Alert\n","import React, { useState } from 'react';\nimport \"./App.css\";\nimport Axios from 'axios';\nimport {v4 as uuidv4} from 'uuid';\nimport Recipe from './components/Recipe';\nimport Alert from './components/Alert';\n\nconst App = () => {\n    const [query, setQuery] = useState(\"\");\n    const [recipes, setRecipes] = useState([]);\n    const [alert, setAlert] = useState(\"\");\n\n    const APP_ID = \"dc260c06\";\n\n    const APP_KEY = \"7cc8a6bd5fafb93fa66ddf958af571b4\";\n\n    const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n    const getData = async () => {\n        if(query !== \"\") {\n            const result = await Axios.get(url);\n            if(!result.data.more) {\n                return setAlert('No food with such name');\n            }\n            setRecipes(result.data.hits);\n            console.log(result);\n            setAlert(\"\");\n            setQuery(\"\");\n        } else {\n            setAlert('Please fill in the form');\n        }\n    };\n\n    const onChange = (e) => {\n        setQuery(e.target.value);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        getData();\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Food Searching App</h1>\n            <form className=\"search-form\" onSubmit={onSubmit}>\n            {alert !== \"\" && <Alert alert={alert} />}\n            <input type=\"text\" placeholder=\"Search Food\" autoComplete=\"off\" onChange={onChange}\n            value={query}/>\n            <input type=\"submit\" value=\"search\"/>\n            </form>\n            <div className=\"recipes\">\n                {recipes !== [] && recipes.map(recipe =>\n                <Recipe key={uuidv4()} recipe={recipe} />)}\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App /> , document.getElementById('root'));"],"sourceRoot":""}